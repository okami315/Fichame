{% block body %}
    <h1 class="text-center">{{ event.name }}</h1>
    <div class="table-responsive">
    <table class="table text-center">
        <thead>
            <tr>
                <th scope="col">Trabajador</th>
                <th scope="col">Asistencia</th>
                <th scope="col">Coordinador</th>
                <th scope="col">Conductor</th>
                <th scope="col">Coche particular</th>
                <th scope="col">Horas específicas</th>
                <th scope="col">Horas fichadas</th>
                <th scope="col">Modificador de horas</th>
            </tr>
        </thead>
        {% for userEvent in event.userEvents %}
            {% if userEvent.disponibility == 1 %}
            <tbody>
                <tr>
                    <td>{{ userEvent.user }}</td>
                    <td>
                        <input type="radio" name="asistencia-{{ userEvent.id }}" id="asistencia-por-defecto-{{ userEvent.id }}" value="null" {% if userEvent.asistance is null or userEvent.asistance is same as('null') %}checked{% endif %} onchange="sendAsistance('{{ userEvent.id }}', event)">
                        <label for="asistencia-por-defecto-{{ userEvent.id }}">?</label>

                        <input type="radio" name="asistencia-{{ userEvent.id }}" id="asistencia-asiste-{{ userEvent.id }}" value="1" {% if userEvent.asistance is same as(1) %}checked{% endif %} onchange="sendAsistance('{{ userEvent.id }}', event)">
                        <label for="asistencia-asiste-{{ userEvent.id }}">✓</label>

                        <input type="radio" name="asistencia-{{ userEvent.id }}" id="asistencia-no-asiste-{{ userEvent.id }}" value="0" {% if userEvent.asistance is same as(0) %}checked{% endif %} onchange="sendAsistance('{{ userEvent.id }}', event)">
                        <label for="asistencia-no-asiste-{{ userEvent.id }}">✘</label>
                    </td>
                    <td>
                    {% if userEvent.asistance == 1 %}
                        <input type="checkbox" name="es_coordinador" id="es_coordinador" value="1" {% if userEvent.coordination == 1 %}checked{% endif %} onchange="updateCoordinador('{{ userEvent.id }}', this.checked)">
                    {% endif %}
                    </td>
                    <td>
                        {% if userEvent.asistance == 1 and userEvent.user.driver == 1 %} 
                            <input type="checkbox" name="es_conductor" id="es_conductor" value="1" {% if userEvent.driving == 1 %}checked{% endif %} onchange="updateDriving('{{ userEvent.id }}', this.checked)">
                        {% endif %}
                    </td>
                    <td>
                        {% if userEvent.asistance == 1 and userEvent.user.driver == 1 %}
                            <input type="checkbox" name="coche_particular" id="coche_particular" value="1" {% if userEvent.isPrivateCar() %}checked{% endif %} onchange="updatePrivateCar('{{ userEvent.id }}', this.checked)">
                        {% endif %}
                    </td>
                    <td>
                        <input class="form-control" type="number" name="horario_estimado" id="horario_estimado" value="{% if userEvent.estimatedHours is null %}{{ event.schedule }}{% else %}{{ userEvent.estimatedHours }}{% endif %}" onchange="updateEstimatedHours('{{ userEvent.id }}', this.value)">
                    </td>
                    <td>Horas fichadas</td>
                    <td>
                        <input class="form-control" type="number" name="horario_modificado" id="horario_modificado" value="{% if userEvent.extraHours is null %}0{% else %}{{ userEvent.extrahours }}{% endif %}" onchange="updateExtraHours('{{ userEvent.id }}', this.value)">
                    </td>
                </tr>
            </tbody>
            {% endif %}
        {% endfor %}
    </table>
</div>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>    
        function sendAsistance(userEventId, event) {
            event.preventDefault();

            var asistanceValue = event.target.value;

            axios.post('/user/event/update-asistance/' + userEventId, {
                asistance: asistanceValue
            })
                .then(function (response) {
                    console.log("Actualización exitosa");
                    location.reload();
                })
                .catch(function (error) {
                    console.log(error);
                });
        }

        function updateCoordinador(userEventId, isChecked) {
            event.preventDefault();
            axios.post('/user/event/update-coordinador/' + userEventId, {
                coordinador: isChecked ? '1' : '0' // Invertir el valor para mantener la estructura actual
            })
                .then(function (response) {
                    console.log("Coordinador actualizado correctamente");
                     location.reload();
                })
                .catch(function (error) {
                    console.log(error);
                });
        }

        function updateDriving(userEventId, isChecked) {
            event.preventDefault();
            axios.post('/user/event/update-driving/' + userEventId, {
                driving: isChecked ? '1' : '0'
            })
                .then(function (response) {
                    console.log("Conductor actualizado correctamente");
                     location.reload();
                })
                .catch(function (error) {
                    console.log(error);
                });
        }

        function updatePrivateCar(userEventId, isChecked) {
            event.preventDefault();
            axios.post('/user/event/update-privateCar/' + userEventId, {
                privateCar: isChecked ? '1' : '0'
            })
                .then(function (response) {
                    console.log("Coche particular actualizado correctamente");
                     location.reload();
                })
                .catch(function (error) {
                    console.log(error);
                });
        }

        function updateEstimatedHours(userEventId, value) {
            axios.post('/user/event/update-estimated-hours/' + userEventId, {
                estimatedHours: parseFloat(value)
            })
                .then(function (response) {
                    console.log("Horario estimado actualizado correctamente");
                })
                .catch(function (error) {
                    console.log(error);
                });
        }

        function updateExtraHours(userEventId, value) {
            axios.post('/user/event/update-extra-hours/' + userEventId, {
                extraHours: parseFloat(value)
            })
                .then(function (response) {
                    console.log("Horas extra actualizadas correctamente");
                })
                .catch(function (error) {
                    console.log(error);
                });
        }
    </script>
{% endblock %}
